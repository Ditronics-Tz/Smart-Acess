<<<<<<< HEAD
# Generated by Django 5.2.4 on 2025-08-25 18:07
=======
# Generated by Django 5.2.4 on 2025-08-25 19:13
>>>>>>> b6f44a090791118ff9315b0839665b97b96c0f68

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('otp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('administrator', 'Administrator'), ('registration_officer', 'Registration Officer')], max_length=30)),
                ('user_id', models.UUIDField()),
                ('email', models.EmailField(max_length=254)),
                ('otp_code', models.CharField(max_length=6)),
                ('expires_at', models.DateTimeField()),
                ('is_verified', models.BooleanField(default=False)),
                ('attempts_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'otp_verifications',
                'indexes': [models.Index(fields=['user_type', 'user_id'], name='otp_verific_user_ty_753211_idx'), models.Index(fields=['otp_code'], name='otp_verific_otp_cod_ed3fc6_idx'), models.Index(fields=['expires_at'], name='otp_verific_expires_e91cd1_idx')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('user_type', models.CharField(choices=[('administrator', 'Administrator'), ('registration_officer', 'Registration Officer')], max_length=30)),
                ('password_changed_at', models.DateTimeField(auto_now_add=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('account_locked', models.BooleanField(default=False)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'authenication_user',
                'indexes': [models.Index(fields=['username'], name='authenicati_usernam_0719ac_idx'), models.Index(fields=['email'], name='authenicati_email_16122c_idx'), models.Index(fields=['is_active'], name='authenicati_is_acti_fb39dd_idx'), models.Index(fields=['deleted_at'], name='authenicati_deleted_f20728_idx')],
            },
        ),
    ]
